% layout 'default';
% title 'Welcome';

<style>
  table tr {
    line-height: 1.25;
  }
  table tr th {
    font-size: 1.3em;
    cursor: pointer;
    outline: none;
  }
  td {
    font-size: 1.2rem;
    padding:10px 5px;
    font-weight: 600;
  }
  .dataTables_length {
    display: none;
  }
  .dataTables_filter label {
    font-weight: 600;
  }
  .dataTables_info {
    margin-bottom: 10px;
  }
  table.striped>tbody>tr:nth-child(odd) {
		background-color: #eceff1;
	}
  #module-list_paginate a.paginate_button {
    text-decoration: none;
    background-color: #26a69a;
    color: #fff;
    border: none;
    border-radius: 2px;
    height: 36px;
    line-height: 36px;
    padding: 10px 12px;
    text-transform: uppercase;
    margin: 10px 5px;
    cursor: pointer;
  }
  .show-data {
    display:table-row;
  }
  .hide-data {
    display:none;
  }
  .complexity-high {
    border-bottom: 3px solid red;
    padding: 0 0 4px;
  }
  .menu-active {
    	border-bottom: 3px solid #fff;
    	padding: 0 0 4px;
	}
</style>

<section id="gitdata" class="section perl-data" style="padding-bottom: 1rem;">
  <div>
    <div class="container" style="padding-top:70px;">
      <div>
        <h2><span style="border-bottom:4px solid lightblue; margin-bottom:50px;">Git Statistics</span></h2>
      </div>
      <div><canvas id="myChart"></canvas></div
    </div>
  </div>
</section>

<section id="poddata" class="section perl-data" style="padding-bottom: 1rem; display:none;">
  <div class="container" style="padding-top:70px;">
    <div>
      <table id="module-list" class="striped row-border" style="width:100%;">
        <thead style="background-color: #cf09ef00;">
          <tr>
            <th width="55%"><span style="border-bottom: 3px solid lightblue;">Module</span></th>
            <th width="20%"><span style="border-bottom: 3px solid lightblue;">Lines/Subs</span></th>
            <th width="20%"><span style="border-bottom: 3px solid lightblue;">Complexity</span></th>
            <th width="10%"><span style="border-bottom: 3px solid lightblue;">Pod</span></th>
          </tr>
        </thead>
        <tbody>
        </tbody
      </table>
    </div>
  </div>
</section>

<script src="http://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>
<script>
  $( document).ready(function() {
    $('nav.nav-extended').append('<div class="nav-content" style="background-color: #263238;">'
      + '<div class="container" style="padding:0 70px;">'
      + '<ul class="tabs tabs-transparent">'
      + '<li class="tab"><a id="gitdata-link" href="#" class="menu-active" style="font-size:22px">Git Data</a></li>'
      + '<li class="tab"><a id="poddata-link"href="#" style="font-size:22px">Modules</a></li>'
      + '</ul>'
      + '</div>'
		  + '</div>'
	  );

    $('#gitdata-link').on('click', () => {
      $('li.tab a').removeClass('menu-active');
      $('.perl-data').hide();
      $('#gitdata-link').addClass('menu-active');
      $('#gitdata').show();
	  });
    $('#poddata-link').on('click', () => {
      $('li.tab a').removeClass('menu-active');
      $('.perl-data').hide();
      $('#poddata-link').addClass('menu-active');
      $('#poddata').show();
	  });

    $('#podname-button').on('click', function(e) {
      e.preventDefault;

      var module = $('#podname').val();
      console.log('module : ' + module);
      window.location.replace('/' + module);
    });

    $('#module-list').DataTable({
        "ajax": 
        { 
          "type": "GET",
          "url": "/summary"
        },
        "columns": [
          { "data": "module" },
          { "data": "lines", "name": "lines",
            fnCreatedCell: function(nTd, sData, oData, iRow, iCol) {
                $(nTd).html("<span>"+oData.lines+' / '+oData.subs+"</span>");
            }
          },
          { "data": "max_complexity", "name": "max_complexity",
            fnCreatedCell: function(nTd, sData, oData, iRow, iCol) {
              if ( oData.max_complexity > 10 ) {
                $(nTd).html("<span class='complexity-high'>"+oData.max_complexity+' / '+oData.avg_complexity+"</span>");
              }
              else {
                $(nTd).html("<span>"+oData.max_complexity+' / '+oData.avg_complexity+"</span>");
              }
            }
          },
          { "data": "pod", "name": "pod",
            fnCreatedCell: function(nTd, sData, oData, iRow, iCol) {
              $(nTd).html("<a href='/pod"+oData.pod+"'><i class='small material-icons' style='color:#009688;'>book</i></a>");
            }
          }
        ]
      }
    );

    $('#module-list_filter label input').attr('placeholder', 'Enter text to filter table');
  });
</script>

<script>

</script>
<script>
  buildChart();

  async function buildChart() {
    const data    = await fetchGitCommitStats();  
    const ctx     = document.getElementById('myChart').getContext('2d'); 
    const myChart = new Chart(ctx , {
      type: 'bar',
      data: {
        labels: data.xlabels,
        datasets:[
          {
            label: 'Git Commits',
            data: data.ydata,
            fill: false,
            backgroundColor: '#616161',
            borderColor: '#616161',
            borderWidth: 1
          }
        ]
      },
      options: {
        scales: {
          xAxes: [{
            tickMarkLength: 15,
            ticks: {
              display: true,
              fontStyle: 'oblique',
              fontSize: 14,
              fontColor: '#000',
              stepSize: 50,
              minRotation: 50
            },
            type: "time",
            time: {
              unit: 'month',
              unitStepSize: 3,
              displayFormats: { month: 'MM/YYYY' }
            }
          }]
        }
      }
    })
    console.log(data);
  }

  async function fetchGitCommitStats() {
    const url = '/git_commit_stats';

    const xlabels = [];
    const ydata   = [];
  
    const response = await fetch(url);
    const gitdata  = await response.json();

    gitdata.data.forEach( element => {
      xlabels.push(element.date);
      ydata.push(element.commits);
    } )

    return { xlabels, ydata };
  }
</script>
